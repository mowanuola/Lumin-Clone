{"version":3,"sources":["pages/Cart.tsx","components/NavBar.tsx","pages/ProductPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CURRENCY","gql","StyledModalContent","styled","div","StyledModalCurrency","StyledModalBody","StyledModalFooter","Cart","updatedItems","open","handleClose","cart","incrementCart","decrementCart","clearCart","currency","setCurrency","fetching","fetchError","error","updateCart","cartData","data","useQuery","loading","updateCartCurrency","a","filter","item","some","exist","id","currencyChange","previousState","totalPrice","newCart","map","changedItem","find","c","price","count","total","useEffect","products","editCart","obj","increment","Modal","size","show","onHide","aria-labelledby","backdropClassName","className","backdrop","keyboard","src","onClick","alt","defaultValue","onChange","e","target","value","length","title","image_url","StyledNav","StyledNavItem","StyledNavButton","button","NavBar","handleOpen","href","width","PRODUCTS","StyledProductPage","StyledProductHero","section","StyledProductsGrid","StyledProductsItem","ProductPage","useState","variables","notifyOnNetworkStatusChange","setOpen","cartContent","setCartContent","name","placeholder","disabled","addedItem","existingItem","newTotal","addToCart","new_items","itemToRemove","App","client","ApolloClient","uri","cache","InMemoryCache","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4143b4ca.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport styled from \"styled-components\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst CURRENCY = gql`\n  {\n    currency\n  }\n`;\n/**\n * TODO:\n * - Implement API call on Currency Change\n */\nconst StyledModalContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  img {\n    height: 15px;\n    width: 10px;\n    fill: rgb(43, 46, 43);\n  }\n  > div {\n    flex: 1;\n    width: 33.3%;\n    display: flex;\n    align-items: center;\n    padding-top: 20px;\n    .close {\n      justify-content: flex-start;\n    }\n    .close-container {\n      border-top-left-radius: 50%;\n      border-top-right-radius: 50%;\n      border-bottom-right-radius: 50%;\n      border-bottom-left-radius: 50%;\n      border: 1px solid rgb(198, 204, 199);\n      width: 24px;\n      height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      margin-left: 20px;\n    }\n  }\n  .title {\n    color: #696969;\n    font-weight: 400;\n    letter-spacing: 1px;\n    font-style: normal;\n    font-size: 10px;\n    text-align: center;\n    margin-bottom: 0;\n    line-height: 1.2;\n    display: inline-block;\n  }\n`;\nconst StyledModalCurrency = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  margin-top: 10px;\n  select {\n    max-width: 80px;\n    padding: 5px 10px;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    margin: 0;\n    display: block;\n    margin-bottom: 15px;\n  }\n`;\nconst StyledModalBody = styled.div`\n  margin-top: 10px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  p {\n    margin-top: 20px;\n    text-align: center;\n  }\n  h6 {\n    color: #1e2d2b;\n    margin-bottom: 0;\n    font-size: 13px;\n    letter-spacing: 0.03px;\n    padding: 0;\n    line-height: 1.5;\n  }\n  .item-list {\n    margin-top: 20px;\n  }\n  .item {\n    display: flex;\n    flex-wrap: wrap;\n    min-height: inherit;\n    max-height: inherit;\n    justify-content: space-between;\n    position: relative;\n    margin-bottom: 20px;\n    background: #fff;\n    padding: 20px 5px;\n  }\n  .details {\n    color: #1e2d2b;\n    width: 65%;\n    line-height: 18px;\n    font-size: 10px;\n    padding: 15px 13px 13px 21px;\n    letter-spacing: 0.02px;\n  }\n  .image {\n    background-color: #fdfdfd;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #1e2d2b;\n    width: 33.3%;\n    padding-right: 15px;\n  }\n  .img {\n    overflow: hidden;\n    height: 80px;\n    width: auto;\n    object-fit: contain;\n  }\n  .remove {\n    cursor: pointer;\n    float: right;\n    padding-right: 5px;\n    position: absolute;\n    right: 27px;\n    margin-top: -10px;\n    margin-right: -20px;\n    font-size: 15px;\n    opacity: 0.7;\n  }\n  div.amount {\n    font-size: 100%;\n    margin-top: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  div.increment {\n    border: 0.5px solid #bcbcbc;\n    padding: 7px;\n    width: 76px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .increment {\n    font-size: 13px;\n  }\n  .increment .num {\n    padding: 0 10px;\n  }\n  .increment .increase,\n  .increment .decrease {\n    cursor: pointer;\n    color: #000;\n    font-size: 15px;\n  }\n`;\nconst StyledModalFooter = styled.div`\n  border-top: 1px solid #d0d0d0;\n  box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  padding: 0 20px 20px;\n  font-size: 15px;\n  div.total {\n    margin-bottom: 10px;\n    padding-top: 15px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border: 0 solid #6e7b70;\n    border-top: none;\n    color: #2b2e2b;\n\n    .price {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n    }\n  }\n  div.add-to-cart-btn {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 15px;\n    button {\n      color: #fff;\n      letter-spacing: 2px;\n      background-color: #4b5548;\n      border: none;\n      margin-top: 15px;\n      font-size: 12px;\n      font-weight: 400;\n      font-style: normal;\n      padding: 16px 20px;\n      text-align: center;\n      text-decoration: none;\n    }\n  }\n`;\nconst Cart = ({\n  open,\n  handleClose,\n  cart,\n  incrementCart,\n  decrementCart,\n  clearCart,\n  currency,\n  setCurrency,\n  fetching,\n  error: fetchError,\n  updateCart,\n  data: cartData,\n}) => {\n  let updatedItems;\n\n  const { data, loading, error } = useQuery(CURRENCY);\n  const handleChange = (e: any) => {\n    setCurrency(e.target.value);\n  };\n  const updateCartCurrency = async () => {\n    let currencyChange = await updatedItems.filter((item) => {\n      return cart.cart.some((exist) => {\n        return item.id === exist.id;\n      });\n    });\n    updateCart((previousState) => {\n      const { cart } = previousState;\n\n      let totalPrice = 0;\n\n      const newCart = cart.map((item) => {\n        const changedItem = currencyChange.find((c) => c.id === item.id);\n        if (changedItem) {\n          totalPrice += changedItem.price * item.count;\n          return {\n            ...item,\n            ...changedItem,\n          };\n        }\n\n        totalPrice += item.price * item.count;\n        return item;\n      });\n\n      return {\n        total: totalPrice,\n        cart: newCart,\n      };\n    });\n  };\n  useEffect(() => {\n    if (!fetchError && !fetching) {\n      updatedItems = cartData.products.map((item) => {\n        return { id: item.id, price: item.price };\n      });\n      updateCartCurrency();\n    }\n  }, [cartData, fetchError, fetching]);\n  const editCart = (obj: any, increment?: boolean) => {\n    if (increment) {\n      incrementCart(obj);\n    }\n    if (!increment) {\n      decrementCart(obj);\n    }\n  };\n  return (\n    <Modal\n      size=\"lg\"\n      show={open}\n      onHide={() => {\n        handleClose();\n      }}\n      aria-labelledby=\"go-back\"\n      backdropClassName=\"modal-backdrop-nested\"\n      className=\"right-modal\"\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <StyledModalContent>\n        <div className=\"close\">\n          <div className=\"close-container\">\n            <img\n              src=\"/assets/close.svg\"\n              onClick={() => {\n                handleClose();\n              }}\n              alt=\"close-modal\"\n            />\n          </div>\n        </div>\n        <div className=\"title\">\n          <h5 className=\"title\">YOUR CART</h5>\n        </div>\n        <div></div>\n      </StyledModalContent>\n      <StyledModalCurrency>\n        <select\n          className=\"currency-select\"\n          defaultValue={currency}\n          onChange={handleChange}\n        >\n          {!loading &&\n            !error &&\n            data &&\n            data.currency.map((item) => (\n              <option value={item} key={item}>\n                {item}\n              </option>\n            ))}\n        </select>\n      </StyledModalCurrency>\n      <StyledModalBody>\n        {cart.cart.length < 1 ? (\n          <p>There are no items in your cart.</p>\n        ) : fetching ? (\n          <div className=\"loader\">\n            <div></div>\n            <div></div>\n          </div>\n        ) : (\n          <div className=\"item-list\">\n            {cart.cart.map((item) => (\n              <div className=\"item\">\n                <div className=\"details\">\n                  <span\n                    className=\"remove\"\n                    onClick={() => {\n                      clearCart(item);\n                    }}\n                  >\n                    <b>X</b>\n                  </span>\n                  <h6>{item.title}</h6>\n\n                  <div className=\"amount\">\n                    <div className=\"increment\">\n                      <span\n                        className=\"decrease\"\n                        onClick={() => {\n                          editCart(item, false);\n                        }}\n                      >\n                        -\n                      </span>\n                      <span className=\"num\">{item.count}</span>\n                      <span\n                        className=\"increase\"\n                        onClick={() => {\n                          editCart(item, true);\n                        }}\n                      >\n                        +\n                      </span>\n                    </div>\n                    <div className=\"price\">\n                      {currency}\n                      {item.count > 1 ? item.count * item.price : item.price}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"image\">\n                  <img\n                    src={item.image_url}\n                    alt={`item ${item.title}`}\n                    className=\"img\"\n                  />\n                </div>\n              </div>\n            ))}\n\n            <StyledModalFooter>\n              <div className=\"total\">\n                <span>Subtotal</span>\n                <div className=\"price\">\n                  {currency} {cart.total}\n                </div>\n              </div>\n              <div className=\"add-to-cart-btn\">\n                <button>PROCEED TO CHECKOUT</button>\n              </div>\n            </StyledModalFooter>\n          </div>\n        )}\n      </StyledModalBody>\n    </Modal>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledNav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 18px 20px 12px;\n  align-items: center;\n  margin: 25px 40px;\n\n  nav {\n    display: flex;\n    align-items: center;\n  }\n  .logo {\n    position: absolute;\n    width: 100%;\n    left: 0;\n    top: -27px;\n    display: inline-block;\n  }\n  .logo-container {\n    width: 170px;\n    margin-right: 50px;\n    position: relative;\n  }\n  .cart {\n    width: 25px;\n    position: relative;\n  }\n`;\nconst StyledNavItem = styled.a`\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: #2b2e2b;\n  color: #000;\n  margin-right: 20px;\n  padding: 5px 10px;\n  text-decoration: none;\n  button {\n    background: transparent;\n    border: 0;\n  }\n  button:focus {\n    outline: 0 !important;\n  }\n`;\nconst StyledNavButton = styled.button`\n  font-size: 14px;\n  line-height: 17px;\n  letter-spacing: #2b2e2b;\n  color: #000;\n  margin-right: 20px;\n  padding: 5px 10px;\n  text-decoration: none;\n  background: transparent;\n  border: 0;\n\n  :focus {\n    outline: 0 !important;\n  }\n  .count {\n    color: #1e2d2b;\n    position: absolute;\n    top: 40px;\n    right: 75px;\n    width: 12px;\n    height: 12px;\n    text-align: center;\n    display: flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n  }\n`;\nconst NavBar = ({ count, handleOpen }) => {\n  return (\n    <StyledNav className=\"d-none d-md-flex\">\n      <nav>\n        <a href=\"https://luminskin.com\" className=\"logo-container\">\n          <img\n            src=\"assets/logo.png\"\n            alt=\"Luminskin Logo\"\n            width=\"170\"\n            className=\"logo\"\n          />\n        </a>\n        <StyledNavItem href=\"/\">Shop</StyledNavItem>\n        <StyledNavItem href=\"#\">Learn</StyledNavItem>\n      </nav>\n      <nav>\n        <StyledNavItem href=\"#\">Account</StyledNavItem>\n        <StyledNavButton onClick={handleOpen}>\n          <img src=\"assets/cart.png\" alt=\"Cart\" className=\"cart\" />\n          <span className=\"count\">{count}</span>\n        </StyledNavButton>\n      </nav>\n    </StyledNav>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nimport styled from \"styled-components\";\nimport Cart from \"./Cart\";\nimport Navbar from \"../components/NavBar\";\n\nconst PRODUCTS = gql`\n  query GetProducts($currency: Currency!) {\n    products {\n      title\n      id\n      price(currency: $currency)\n      image_url\n    }\n  }\n`;\nconst StyledProductPage = styled.div``;\nconst StyledProductHero = styled.section`\n  display: flex;\n  justify-content: space-between;\n  padding: 70px 25px 25px;\n  background-color: #fcfcf9;\n  align-items: flex-end;\n  div.left-container {\n    padding-right: 20px;\n    max-width: 500px;\n    width: 50%;\n    margin: 0 auto;\n    h2 {\n      font-family: \"Playfair Display\", serif;\n      font-weight: 400;\n      font-size: 48px;\n      letter-spacing: 0px;\n      font-family: freight-display-pro, serif;\n      text-transform: none;\n      color: #2b2e2b;\n      margin-bottom: 26px;\n    }\n    p {\n      font-size: 16px;\n      letter-spacing: 0.03px;\n      text-transform: none;\n      color: #2b2e2b;\n      margin-bottom: 36px;\n    }\n  }\n  div.right-container {\n    padding-left: 20px;\n    max-width: 300px;\n    width: 50%;\n    margin: 0 auto;\n    select {\n      width: 100%;\n      border: 1px solid #cdd1ce;\n      padding: 20px;\n      font-size: 13px;\n      margin-bottom: 35px;\n      color: #4b5548;\n    }\n  }\n`;\nconst StyledProductsGrid = styled.section`\n  padding: 25px;\n  background-color: #e2e6e3;\n  display: flex;\n  flex-wrap: wrap;\n\n  @media only screen and (max-width: 768px) {\n    .col-custom {\n      padding: 2.5rem 0.5rem !important;\n      width: 50% !important;\n    }\n  }\n`;\nconst StyledProductsItem = styled.div`\n  text-align: center;\n  padding: 50px 30px;\n  min-height: 50px;\n\n  img {\n    padding: 0 15px;\n    max-height: 150px;\n    object-fit: contain;\n    margin-top: -47px;\n    width: 50%;\n  }\n  .add-to-cart-btn {\n    background-color: #4b5548;\n    color: #fcfcf9;\n    padding: 14px 11px;\n    border: 0.5px solid #4b5548;\n    width: calc(50% - 5px);\n    font-size: 14px;\n    text-align: center;\n    cursor: pointer;\n  }\n  .product-img {\n    min-height: 220px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  }\n  .product-title {\n    font-size: 16px;\n    ont-weight: 400;\n    line-height: 25px;\n    color: #2b2e2b;\n    margin-bottom: 6px;\n  }\n`;\nconst ProductPage = () => {\n  const [currency, setCurrency] = useState(\"NGN\");\n  const { loading, error, data } = useQuery(PRODUCTS, {\n    variables: { currency },\n    notifyOnNetworkStatusChange: true,\n  });\n  const [open, setOpen] = useState(false);\n  const [cartContent, setCartContent]: any = useState({ cart: [], total: 0 });\n\n  const incrementCount = (obj: any) => {\n    let addedItem = cartContent.cart.find((item) => obj.id === item.id);\n    addedItem.count += 1;\n    let newTotal = cartContent.total + addedItem.price;\n    setCartContent({\n      ...cartContent,\n      total: newTotal,\n    });\n  };\n  const decrementCount = (obj: any) => {\n    let addedItem = cartContent.cart.find((item) => obj.id === item.id);\n    if (addedItem.count === 1) {\n      let new_items = cartContent.cart.filter((item) => item.id !== obj.id);\n      let newTotal = cartContent.total - addedItem.price;\n      setCartContent({\n        ...cartContent,\n        cart: new_items,\n        total: newTotal,\n      });\n    } else {\n      addedItem.count -= 1;\n      let newTotal = cartContent.total - addedItem.price;\n      setCartContent({\n        ...cartContent,\n        total: newTotal,\n      });\n    }\n  };\n  const addToCart = (obj: any) => {\n    let addedItem = data.products.find((item) => item.id === obj.id);\n    let existingItem = cartContent.cart.find((item) => obj.id === item.id);\n    if (existingItem) {\n      existingItem.count += 1;\n      setCartContent({\n        ...cartContent,\n        total: cartContent.total + addedItem.price,\n      });\n    } else {\n      addedItem = { ...addedItem, count: 1 };\n      let newTotal = cartContent.total + addedItem.price;\n      setCartContent({\n        ...cartContent,\n        cart: [...cartContent.cart, addedItem],\n        total: newTotal,\n      });\n    }\n  };\n  const clearCart = (obj: any) => {\n    let itemToRemove = cartContent.cart.find((item) => obj.id === item.id);\n    let new_items = cartContent.cart.filter((item) => obj.id !== item.id);\n    let newTotal = cartContent.total - itemToRemove.price * itemToRemove.count;\n    setCartContent({\n      ...cartContent,\n      cart: new_items,\n      total: newTotal,\n    });\n  };\n\n  return (\n    <StyledProductPage>\n      <Navbar\n        count={cartContent.cart.length}\n        handleOpen={() => setOpen(true)}\n      />\n      <StyledProductHero>\n        <div className=\"left-container\">\n          <h2>All Products</h2>\n          <p>A 360° look at Lumin</p>\n        </div>\n        <div className=\"right-container\">\n          <select\n            className=\"\"\n            name=\"\"\n            placeholder=\"Filter by\"\n            defaultValue=\"single-product\"\n          >\n            <option value=\"single-product\" disabled>\n              Filter by\n            </option>\n            <option value=\"all-products\">All Products</option>\n            <option value=\"new-products\">New Products</option>\n            <option value=\"sets\">Sets</option>\n            <option value=\"skincare\">Skincare</option>\n            <option value=\"hair-and-body\">Hair &amp; Body Care</option>\n          </select>\n        </div>\n      </StyledProductHero>\n      {loading ? (\n        <div className=\"loader\">\n          <div></div>\n          <div></div>\n        </div>\n      ) : (\n        <StyledProductsGrid>\n          {data &&\n            data.products.map((item: any) => (\n              <StyledProductsItem className=\"col-md-4 col-custom\" key={item.id}>\n                <div className=\"product-img\">\n                  <img src={item.image_url} alt={`item ${item.title}`} />\n                </div>\n                <h3 className=\"product-title\">{item.title}</h3>\n                <p className=\"product-price\">\n                  <b>{currency}</b> {item.price}\n                </p>\n                <button\n                  className=\"add-to-cart-btn\"\n                  onClick={() => {\n                    setOpen(true);\n                    addToCart(item);\n                  }}\n                >\n                  Add To Cart\n                </button>\n              </StyledProductsItem>\n            ))}\n        </StyledProductsGrid>\n      )}\n      <Cart\n        open={open}\n        handleClose={() => setOpen(false)}\n        cart={cartContent}\n        updateCart={setCartContent}\n        incrementCart={incrementCount}\n        decrementCart={decrementCount}\n        clearCart={clearCart}\n        currency={currency}\n        setCurrency={setCurrency}\n        fetching={loading}\n        data={data}\n        error={error}\n      />\n    </StyledProductPage>\n  );\n};\n\nexport default ProductPage;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport ProductPage from \"./pages/ProductPage\";\n\nfunction App() {\n  const client: any = new ApolloClient({\n    uri: \"https://pangaea-interviews.now.sh/api/graphql\",\n    cache: new InMemoryCache(),\n  });\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <ProductPage />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}